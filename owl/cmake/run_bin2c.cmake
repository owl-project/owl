## Copyright 2021 Jefferson Amstutz
## SPDX-License-Identifier: Apache-2.0

# NOTE: This script is only to be invoked by the EmbedPTX() function.

unset(file_contents)

string(APPEND file_contents "/* Autogenerated by EmbedPTX */\n\n")
string(APPEND file_contents "#include <stdint.h>\n\n")


foreach(obj ${OBJECTS})
  get_filename_component(obj_ext ${obj} EXT)
  get_filename_component(obj_dir ${obj} DIRECTORY)
message("embed-ptx_run obj=${obj} -> dir ${obj_dir}")

  list(POP_FRONT SYMBOL_NAMES obj_name)

  if(obj_ext MATCHES ".ptx" OR obj_ext MATCHES ".optixir")
    # Read file contents as hex data
    file(READ ${obj} filedata HEX)

    # Calculate the number of bytes
    string(LENGTH ${filedata} len)
    math(EXPR numBytes "${len} / 2")

    if(obj_ext MATCHES ".ptx")
    # append two bytes for the null character
    math(EXPR numBytes "${numBytes} + 2")
    endif()

    # Convert hex data for C compatibility
    string(REGEX REPLACE "([0-9a-f][0-9a-f])" "0x\\1," filedata ${filedata})

    # Get rid of the last comma
    string(LENGTH ${filedata} len)
    math(EXPR len "(${len} - 1)")
    string(SUBSTRING "${filedata}" 0 ${len} filedata)

    if (WIN32)
    string(APPEND file_contents "extern \"C\" __declspec(dllexport) void *dummyFct_${obj_name}() { return 0; };\n")
    string(APPEND file_contents "extern \"C\" __declspec(dllexport)  extern \n")
    else()
    string(APPEND file_contents "extern \"C\" __attribute__((visibility(\"default\")))  void *dummyFct_${obj_name}() { return 0; };\n")
    string(APPEND file_contents "extern \"C\" __attribute__((visibility(\"default\")))  \n")
    endif()

    # Append data to file
    string(APPEND file_contents "const uint8_t ${obj_name}[${numBytes}] = \n")
    string(APPEND file_contents "{${filedata}")
    
    if(obj_ext MATCHES ".ptx")
    # append two bytes for the null character
    string(APPEND file_contents ",0x00,0x00};\n\n")
    else()
    string(APPEND file_contents "};\n\n")
    endif()

    # Append length 
    string(APPEND file_contents "const uint32_t ${obj_name}_length = ${numBytes};\n\n")
  endif()
endforeach()

file(WRITE "${OUTPUT}" "${file_contents}")
